service: bmc-lambda
plugins:
  - serverless-webpack
  - serverless-offline
custom:
  webpack:
    webpackConfig: ./webpack.config.js
    includeModules: true
provider:
  name: aws
  runtime: nodejs8.10
  stage: prod
  region: eu-west-1
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:DescribeTable
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource: 'arn:aws:dynamodb:eu-west-1:*:*'
functions:
  create:
    handler: lambdas/create.main
    events:
      - http:
          path: bmc-items/create
          method: post
          cors: true
          authorizer: aws_iam
  get:
    handler: lambdas/get.main
    events:
      - http:
          path: bmc-items/get
          method: get
          cors: true
          authorizer: aws_iam
          queryStringParameters: ['Team', 'BlockUuid']
  list:
    handler: lambdas/list.main
    events:
      - http:
          path: bmc-items/list
          method: get
          cors: true
          authorizer: aws_iam
          queryStringParameters: ['Team']
  update:
    handler: lambdas/update.main
    events:
      - http:
          path: bmc-items/update
          method: put
          cors: true
          authorizer: aws_iam
          queryStringParameters: ['Team', 'BlockUuid']
  delete:
    handler: lambdas/delete.main
    events:
      - http:
          path: bmc-items/delete
          method: delete
          cors: true
          authorizer: aws_iam
          queryStringParameters: ['Team', 'BlockUuid']
  createDatabaseData:
    handler: tests/testdata/createDatabaseData.main
    events:
      - http:
          path: bmc-items/createDatabaseData
          method: post
          cors: true
          authorizer: aws_iam
          queryStringParameters: ['Team', 'BlockUuid']
